image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "30"
  ANDROID_BUILD_TOOLS: "30.0.2"
  ANDROID_SDK_TOOLS:   "latest"
  GIT_SUBMODULE_STRATEGY: recursive
  BUILD_TYPE: release

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - upload

dev:bison:build:
  stage: build
  only:
    refs:
    - bison_dev
  script:
    - sed -i 's/PZDynamic_bison/PZDynamic_zebra/g' app/src/main/AndroidManifest.xml
    - ./gradlew --refresh-dependencies --stacktrace assembleDevBisonDebug
    - appcenter distribute release \
        --group Collaborators \
        --file "app/build/outputs/apk/devBison/debug/app-devBison-debug.apk" \
        --release-notes 'Bison release with dev version of sdk' \
        --app "PZDynamic_zebra" \
        --token "${APP_CENTER_TOKEN}" \
        --quiet
  tags:
    - android
  artifacts:
    paths:
      - app/build/outputs/apk/devBison/debug/app-devBison-debug.apk
    expire_in: 10 h

dev:zebra:build:
  stage: build
  only:
    refs:
    - zebra
  script:
    - sed -i 's/PZDynamic_bison/PZDynamic_zebra/g' app/src/main/AndroidManifest.xml 
    - ./gradlew --refresh-dependencies --stacktrace assembleDev
    - appcenter distribute release \
        --group Collaborators \
        --file "app/build/outputs/apk/devZebra/debug/app-devZebra-debug.apk" \
        --release-notes 'Zebra release with dev version of sdk' \
        --app "PZDynamic_zebra" \
        --token "${APP_CENTER_TOKEN}" \
        --quiet
  tags:
    - android
  artifacts:
    paths:
      - app/build/outputs/apk/devZebra/debug/app-devZebra-debug.apk
    expire_in: 10 h

prod:bison:build:
  stage: build
  only:
    refs:
    - bison
  script:
    - ./gradlew --refresh-dependencies --stacktrace assembleProdBisonDebug
  tags:
    - android
  artifacts:
    paths:
      - app/build/outputs/apk/prodBison/debug/app-prodBison-debug.apk
    expire_in: 10 h

prod:zebra:build:
  stage: build
  only:
    refs:
    - zebra_prod
  script:
    - ./gradlew --refresh-dependencies --stacktrace assembleProdZebraDebug
  tags:
    - android
  artifacts:
    paths:
      - app/build/outputs/apk/prodZebra/debug/app-prodZebra-debug.apk
    expire_in: 10 h

prod:demo:build:
  stage: build
  only:
    refs:
    - demo
  script:
    - ./gradlew --refresh-dependencies --stacktrace assembleProdDemoDebug;
  tags:
    - android
  artifacts:
    paths:
      - app/build/outputs/apk/prodDemo/debug/app-prodDemo-debug.apk
    expire_in: 10 h


dev:bison:upload:
  stage: upload
  only:
    refs:
    - bison_dev
  script:
    - ./gradlew --stacktrace appCenterUploadDevBisonDebug
  tags:
    - android
  needs:
    - dev:bison:build

dev:zebra:upload:
  stage: upload
  only:
    refs:
    - zebra
  script:
    - ./gradlew --stacktrace appCenterUploadDevZebraDebug
  tags:
    - android
  needs:
    - dev:zebra:build

dev:bdd:upload:
  stage: upload
  only:
    refs:
    - bdd
  script:
    - ./gradlew --stacktrace appCenterUploadDevBDDDebug
  tags:
    - android
  needs:
    - dev:bdd:build

prod:bison:upload:
  stage: upload
  only:
    refs:
    - bison
  script:
    - ./gradlew --stacktrace appCenterUploadProdBisonDebug
  tags:
    - android
  needs:
    - prod:bison:build

prod:zebra:upload:
  stage: upload
  only:
    refs:
    - zebra_prod
  script:
    - ./gradlew --stacktrace appCenterUploadProdZebraDebug
  tags:
    - android
  needs:
    - prod:zebra:build

prod:demo:upload:
  stage: upload
  only:
    refs:
    - demo
  script:
    - ./gradlew --stacktrace appCenterUploadProdDemoDebug
  tags:
    - android
  needs:
    - prod:demo:build

prod:beta:upload:
  stage: upload
  only:
    refs:
    - beta
  script:
    - ./gradlew --stacktrace appCenterUploadBetaDebug
  tags:
    - android
  needs:
    - prod:beta:build
